      spectra = "../data_final/n5548_mean_g130mb4.asc" Input spectrum
  plot_ranges = "*"             Enter the components to be plotted
   new_sample = "*"             New sample ranges for data
  comp_number = 64              Component number
 param_number = 1               Parameter number
 new_par_valu = -8.0000000000000E-14  
  lower_limit = 0.10000000149012 New lower limit
  upper_limit = 200.            New upper limit
    step_size = 1.0000000000000E-14 New step size
 param_tolera = 1.0000000000000E-4 New parameter tolerance
  fix_or_free = 0               New fix or free status
 change_itera = 3               New number of iterations
       choice = 121             yes or no
    comp_name = "gaussian"      What is the new components type
       (debug = no)             Debugging mode on?
    (interact = yes)            Interactive fitting mode?
     (gridfit = no)             Make a grid in Chi**2?
(errors_from_ = no)             Compute expected variance from Model?
    (plotdata = no)             Make an ASCII file for plotting?
 (type_of_fit = "simplex")      Type of minimization
    (logfiles = "n5548_lyalpha.log") List of log files
    (database = "sfdb")         Database directory name
 (initial_fit = "n5548_lyalpha") File of initial guesses
   (final_fit = "n5548_lyalpha") Database name for final fit
   (plot_file = "n5548_lyalpha.plt") File name for plot file
(flux_interva = "")             Database name for desired flux intervals
 (Sample_file = "n5548_lyalpha_sample.dat") File defining sample ranges for dat
(max_iteratio = 5)              Maximum number of iterations permitted
(fit_toleranc = 1.0000000000000E-4) Fractional tolerance of fit
          (v0 = 0.)             Offset for variance calculation
          (v1 = 1.)             Slope for variance calculation
    (key_file = "specfit$")     Directory Location of the file specfit.key
    (low_mult = 0.1)            Multiplier to determine the default lower limit
   (high_mult = 10.)            Multiplier to determine the default upper limit
   (step_mult = 0.01)           Multiplier to determine the default step size
    (grid_num = 1)              The number of parameters to grid (1 or 2).
  (grid_comp1 = 1)              The component number of the first grid paramete
   (grid_par1 = 2)              The parameter number of the first parameter to 
  (grid_blim1 = )               The lower limit of the first grid parameter.
  (grid_tlim1 = )               The upper limit of the first grid parameter.
  (grid_step1 = )               The step size of the first grid parameter.
  (grid_comp2 = 1)              The component number of the second grid paramet
   (grid_par2 = 2)              The parameter number of the second parameter to
  (grid_blim2 = )               The lower limit of the second grid parameter.
  (grid_tlim2 = )               The upper limit of the second grid parameter.
  (grid_step2 = )               The step size of the second grid parameter.
      (cursor = "")             Graphics cursor input
        (mode = "ql")           
